
MODULES[] =
   UCStream
   LoadImage
   Bitmap
   KPathSea
   FreeType
   PDF
   DynamicTrie
   DynUCTrie
   Trie
   PTable
   SymbolSet
   Type1
   OpenType
   Logging
   Dim
   Bezier
   Graphic
   Substitute
   GlyphMetric
   FontMetric
   Encodings
   Hyphenation
   JustHyph
   GlyphBitmap
   FontPK
   FontTFM
   FontFT
   FontVirtual
   LoadFont
   GenerateDVI
   GeneratePDF
   GeneratePostScript
   GenerateSVG

C_FILES[] =
  kpathsea-stubs
  freetype-stubs
O_FILES[] = $(addsuffix .o, $(C_FILES))

.SCANNER: scan-ocaml-%: $(MLPP_TARGETS)

LocalOCamlGeneratedFiles($(ROOT)/Tools/Tools.$(CMA))
OCamlDependsOnLibrary($(ROOT)/lib/Unicode)
OCamlDependsOnPackage($(ROOT)/lib/CamlImages)

CAMLIMAGES_DIR     = $(shell ocamlfind query camlimages)
CAMLIMAGES_CLIBS   = -ljpeg -lfreetype -lpng

OCAMLFLAGS += -I $(shell ocamlfind query camlimages)/core

OCamlPackageModules(Runtime, $(MODULES))

OCamlPackage(Runtime, $(MODULES))

section
  OCAML_LIB_FLAGS += $(absname $(O_FILES))

  Runtime.$(CMA): $(O_FILES)

  OCamlLibrary(Runtime, $(ROOT)/lib/CamlImages Runtime)

.PHONY: Runtime-install

OCamlLibraryCopy(Runtime-install, $(ROOT)/lib, Runtime, Runtime)

kpathsea-stubs.o: kpathsea-stubs.c
	ocamlc -output-obj -o $@ -I /usr/include/freetype2 -I /usr/include/freetype2/freetype $(KPATHSEA_CFLAGS) $(SELFAUTO_FLAGS) $^
	mv kpathsea-stubs.o $@

freetype-stubs.o: freetype-stubs.c
	ocamlc -output-obj -o $@ -I /usr/include/freetype2 -I /usr/include/freetype2/freetype $^
	mv freetype-stubs.o $@

# vim:set ft=make:
